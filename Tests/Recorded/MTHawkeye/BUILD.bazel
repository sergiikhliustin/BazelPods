load('@build_bazel_rules_ios//rules:framework.bzl', 'apple_framework')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
apple_framework(
  name = "MTHawkeye",
  module_name = "MTHawkeye",
  bundle_id = "org.cocoapods.MTHawkeye",
  link_dynamic = True,
  testonly = False,
  infoplists = [
    ":MTHawkeye_InfoPlist"
  ],
  platforms = {
    "ios": "10.0"
  },
  srcs = glob(
    [
      "MTHawkeye/Core/**/*.h",
      "MTHawkeye/Core/**/*.m",
      "MTHawkeye/DefaultPlugins/**/*.h",
      "MTHawkeye/DefaultPlugins/**/*.m",
      "MTHawkeye/DefaultPlugins/**/*.mm",
      "MTHawkeye/EnergyPlugins/BackgroundTaskTrace/Core/*.h",
      "MTHawkeye/EnergyPlugins/BackgroundTaskTrace/Core/*.m",
      "MTHawkeye/EnergyPlugins/CPUTrace/Core/*.h",
      "MTHawkeye/EnergyPlugins/CPUTrace/Core/*.m",
      "MTHawkeye/EnergyPlugins/CPUTrace/Core/*.mm",
      "MTHawkeye/FLEXExtension/**/*.h",
      "MTHawkeye/FLEXExtension/**/*.m",
      "MTHawkeye/MemoryPlugins/Allocations/Core/*.c",
      "MTHawkeye/MemoryPlugins/Allocations/Core/*.cpp",
      "MTHawkeye/MemoryPlugins/Allocations/Core/*.h",
      "MTHawkeye/MemoryPlugins/Allocations/Core/*.m",
      "MTHawkeye/MemoryPlugins/Allocations/Core/*.mm",
      "MTHawkeye/MemoryPlugins/LivingObjectSniffer/Core/*.h",
      "MTHawkeye/MemoryPlugins/LivingObjectSniffer/Core/*.m",
      "MTHawkeye/MemoryPlugins/LivingObjectSniffer/Core/*.mm",
      "MTHawkeye/NetworkPlugins/Inspect/Core/*.h",
      "MTHawkeye/NetworkPlugins/Inspect/Core/*.m",
      "MTHawkeye/NetworkPlugins/Monitor/Core/**/*.h",
      "MTHawkeye/NetworkPlugins/Monitor/Core/**/*.m",
      "MTHawkeye/StackBacktrace/**/*.cpp",
      "MTHawkeye/StackBacktrace/**/*.h",
      "MTHawkeye/StackBacktrace/**/*.m",
      "MTHawkeye/StackBacktrace/**/*.mm",
      "MTHawkeye/StorageMonitorPlugins/DirectoryWatcher/Core/*.h",
      "MTHawkeye/StorageMonitorPlugins/DirectoryWatcher/Core/*.m",
      "MTHawkeye/TimeConsumingPlugins/ANRTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/ANRTrace/Core/*.m",
      "MTHawkeye/TimeConsumingPlugins/ANRTrace/Core/*.mm",
      "MTHawkeye/TimeConsumingPlugins/FPSTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/FPSTrace/Core/*.m",
      "MTHawkeye/TimeConsumingPlugins/ObjcCallTrace/Core/*.c",
      "MTHawkeye/TimeConsumingPlugins/ObjcCallTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/ObjcCallTrace/Core/*.m",
      "MTHawkeye/TimeConsumingPlugins/UITimeProfiler/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/UITimeProfiler/Core/*.m",
      "MTHawkeye/UISkeleton/**/*.h",
      "MTHawkeye/UISkeleton/**/*.m",
      "MTHawkeye/Utils/**/*.h",
      "MTHawkeye/Utils/**/*.m",
      "MTHawkeye/Utils/**/*.mm"
    ],
    allow_empty = True
  ),
  public_headers = glob(
    [
      "MTHawkeye/Core/**/*.h",
      "MTHawkeye/DefaultPlugins/**/*.h",
      "MTHawkeye/EnergyPlugins/BackgroundTaskTrace/Core/*.h",
      "MTHawkeye/EnergyPlugins/CPUTrace/Core/MTHCPUTracePublicHeader.h",
      "MTHawkeye/FLEXExtension/**/*.h",
      "MTHawkeye/MemoryPlugins/Allocations/Core/MTHAllocations.h",
      "MTHawkeye/MemoryPlugins/LivingObjectSniffer/Core/*.h",
      "MTHawkeye/NetworkPlugins/Inspect/Core/*.h",
      "MTHawkeye/NetworkPlugins/Monitor/Core/**/*.h",
      "MTHawkeye/StackBacktrace/MTHStackFrameSymbolicsRemote.h",
      "MTHawkeye/StackBacktrace/mth_stack_backtrace.h",
      "MTHawkeye/StorageMonitorPlugins/DirectoryWatcher/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/ANRTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/FPSTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/ObjcCallTrace/Core/*.h",
      "MTHawkeye/TimeConsumingPlugins/UITimeProfiler/Core/*.h",
      "MTHawkeye/UISkeleton/**/*.h",
      "MTHawkeye/Utils/*.h"
    ],
    allow_empty = True
  ),
  deps = [
    "//Tests/Pods/CocoaLumberjack:CocoaLumberjack",
    "//Tests/Pods/FLEX:FLEX",
    "//Tests/Pods/MTAppenderFile:MTAppenderFile",
    "//Tests/Pods/fishhook:fishhook"
  ],
  objc_defines = [
    "COCOAPODS=1"
  ] + select(
    {
      "//conditions:default": [
        "POD_CONFIGURATION_DEBUG=1",
        "DEBUG=1"
      ],
      ":release": [
        "POD_CONFIGURATION_RELEASE=1"
      ]
    }
  ),
  swift_defines = [
    "COCOAPODS"
  ] + select(
    {
      "//conditions:default": [
        "DEBUG"
      ]
    }
  ),
  sdk_dylibs = [
    "sqlite3",
    "stdc++",
    "z"
  ],
  sdk_frameworks = [
    "CFNetwork",
    "CoreGraphics",
    "Foundation",
    "ImageIO",
    "QuartzCore",
    "SceneKit",
    "SystemConfiguration",
    "UIKit",
    "WebKit",
    "CoreFoundation"
  ],
  visibility = [
    "//visibility:public"
  ]
)
genrule(
  name = "MTHawkeye_InfoPlist",
  srcs = [],
  outs = [
    "MTHawkeye_InfoPlist.plist"
  ],
  cmd = """cat <<EOF > $@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleIdentifier</key>
	<string>org.cocoapods.MTHawkeye</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>MTHawkeye</string>
	<key>CFBundlePackageType</key>
	<string>FMWK</string>
	<key>CFBundleShortVersionString</key>
	<string>0.12.8</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleSupportedPlatforms</key>
	<array>
		<string>iPhoneSimulator</string>
		<string>iPhoneOS</string>
	</array>
	<key>CFBundleVersion</key>
	<string>1</string>
	<key>MinimumOSVersion</key>
	<string>10.0</string>
	<key>UIDeviceFamily</key>
	<array>
		<integer>1</integer>
		<integer>2</integer>
	</array>
</dict>
</plist>

EOF"""
)