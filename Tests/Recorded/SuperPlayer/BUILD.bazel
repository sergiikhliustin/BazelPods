load('@build_bazel_rules_ios//rules:framework.bzl', 'apple_framework')
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
apple_framework(
  name = "SuperPlayer",
  module_name = "SuperPlayer",
  bundle_id = "org.cocoapods.SuperPlayer",
  link_dynamic = False,
  testonly = False,
  platforms = {
    "ios": "10.0"
  },
  srcs = glob(
    [
      "Demo/TXLiteAVDemo/SuperPlayerKit/SuperPlayer/**/*.h",
      "Demo/TXLiteAVDemo/SuperPlayerKit/SuperPlayer/**/*.m"
    ],
    allow_empty = True
  ),
  private_headers = glob(
    [
      "Demo/TXLiteAVDemo/SuperPlayerKit/SuperPlayer/Utils/TXBitrateItemHelper.h",
      "Demo/TXLiteAVDemo/SuperPlayerKit/SuperPlayer/Views/SuperPlayerView+Private.h"
    ],
    allow_empty = True
  ),
  data = glob(
    [
      "Demo/TXLiteAVDemo/SuperPlayerKit/SuperPlayer/Resource/**"
    ],
    allow_empty = True
  ),
  deps = [
    "//Tests/Pods/AFNetworking:AFNetworking",
    "//Tests/Pods/Masonry:Masonry",
    "//Tests/Pods/SDWebImage:SDWebImage",
    "//Tests/Pods/TXLiteAVSDK_Player:TXLiteAVSDK_Player"
  ],
  objc_defines = [
    "COCOAPODS=1"
  ] + select(
    {
      "//conditions:default": [
        "POD_CONFIGURATION_DEBUG=1",
        "DEBUG=1"
      ],
      ":release": [
        "POD_CONFIGURATION_RELEASE=1"
      ]
    }
  ),
  swift_defines = [
    "COCOAPODS"
  ] + select(
    {
      "//conditions:default": [
        "DEBUG"
      ]
    }
  ),
  sdk_dylibs = [
    "c++",
    "iconv",
    "resolv",
    "sqlite3",
    "stdc++",
    "z"
  ],
  sdk_frameworks = [
    "AVFoundation",
    "Accelerate",
    "CoreGraphics",
    "CoreTelephony",
    "MobileCoreServices",
    "SystemConfiguration",
    "VideoToolbox",
    "CoreFoundation",
    "MediaPlayer",
    "Photos"
  ],
  visibility = [
    "//visibility:public"
  ]
)